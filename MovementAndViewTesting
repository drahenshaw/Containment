#pragma once

#include <SFML/Graphics.hpp>
#include <iostream>

using std::cout;
using std::endl;

int main()
{

	sf::RenderWindow window(sf::VideoMode(500, 500), "SFML Window");
	
	sf::RectangleShape scenery[5] , p1(* new sf::Vector2f(25,25));
	for (int i = 0; i < 5; i++) {
		scenery[i].setPosition(100 * i, 100 * i);
		scenery[i].setSize(*(new sf::Vector2f(50,100+50*i)));
		scenery[i].setFillColor(sf::Color::Red);
	}
	bool wkp = false, akp = false, skp = false, dkp = false, view =false;
	float xMove = 0, yMove = 0;
	sf::View defaultView = window.getDefaultView(), secondaryView;

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();

			if (event.type == sf::Event::KeyPressed) {//User input
				if (event.key.code == sf::Keyboard::W) {
					wkp = true;
				}
				if (event.key.code == sf::Keyboard::A) {
					akp = true;
				}
				if (event.key.code == sf::Keyboard::S) {
					skp = true;
				}
				if (event.key.code == sf::Keyboard::D) {
					dkp = true;
				}
			}
			if (event.type == sf::Event::KeyReleased) {
				if (event.key.code == sf::Keyboard::W) {
					wkp = false;
				}
				if (event.key.code == sf::Keyboard::A) {
					akp = false;
				}
				if (event.key.code == sf::Keyboard::S) {
					skp = false;
				}
				if (event.key.code == sf::Keyboard::D) {
					dkp = false;
				}
				if (event.key.code == sf::Keyboard::V) {//Switch view point
					view = !view;
				}

			}
		}

		if (wkp) {//Y Movement
			if (skp) {
				yMove = 0;
			}
			else {
				yMove = -1;
			}
		}
		else{
			if (skp) {
				yMove = 1;
			}
			else {
				yMove = 0;
			}
		}
		if (akp) {//X Movement
			if (dkp) {
				xMove = 0;
			}
			else {
				xMove = -1;
			}
		}
		else {
			if (dkp) {
				xMove = 1;
			}
			else {
				xMove = 0;
			}
		}

		p1.move(xMove, yMove);

		secondaryView.setCenter(p1.getPosition());
		secondaryView.setSize(window.getSize().x*2, window.getSize().y*2);

		if (view) {
			window.setView(defaultView);
		}
		else {
			window.setView(secondaryView);
		}

		window.clear();
		for (int i = 0; i < 5; i++) {
			window.draw(scenery[i]);
		}
		window.draw(p1);
		window.display();
	}

	return 0;

}
